---
- name: Initialize grafana_label fact
  ansible.builtin.set_fact:
    grafana_label: "{{ dsc_name }}-prod"

- name: Set grafana_label
  when: dsc.global.environment != 'production'
  ansible.builtin.set_fact:
    grafana_label: "{{ dsc_name }}-horsprod"

- name: Get Grafana instance
  kubernetes.core.k8s_info:
    api_version: grafana.integreatly.org/v1beta1
    namespace: "{{ dsc.grafana.namespace }}"
    kind: Grafana
    label_selectors:
      - app={{ grafana_label }}
  register: gf_instance

- name: Manage missing Grafana instance.
  when: gf_instance.resources | length == 0
  ansible.builtin.fail:
    msg: "Missing Grafana instance. Please execute 'ansible-playbook install.yaml -t grafana' before trying to install the default datasource."

- name: Manage missing default datasource URL
  when: dsc.grafanaDatasource.defaultPrometheusDatasourceUrl is not defined
  block:
    - name: Disclaimer when missing datasource URL in dsc
      ansible.builtin.debug:
        msg:
          - Operation Cancelled.
          - The defaultPrometheusDatasourceUrl is missing in your {{ dsc_name }} dsc custom resource.
          - You must provide an URL for default Prometheus datasource.
          - Please set this value and try again.
          - "You can execute the following command to get help :"
          - kubectl explain dsc.spec.grafanaDatasource

    - name: Exit playbook when missing datasource URL in dsc
      ansible.builtin.meta: end_play

- name: Get service accounts in Grafana namespace
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    namespace: "{{ dsc.grafana.namespace }}"
  register: gf_service_accounts

- name: Get Grafana instance service account secret name
  ansible.builtin.set_fact:
    gf_sa_secret_name: "{{ gf_service_accounts.resources
      | selectattr('metadata.name', 'contains', grafana_label + '-sa-token')
      | map(attribute='metadata.name') | first }}"

- name: Create Grafana prometheus datasource
  kubernetes.core.k8s:
    template: prometheus-datasource.yaml.j2
