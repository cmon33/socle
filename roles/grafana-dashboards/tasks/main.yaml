---
- name: Initialize grafana_label fact
  ansible.builtin.set_fact:
    grafana_label: "{{ dsc_name }}-prod"

- name: Set grafana_label
  when: dsc.global.environment != 'production'
  ansible.builtin.set_fact:
    grafana_label: "{{ dsc_name }}-horsprod"

- name: Get Grafana instance
  kubernetes.core.k8s_info:
    api_version: grafana.integreatly.org/v1beta1
    namespace: "{{ dsc.grafana.namespace }}"
    kind: Grafana
    label_selectors:
      - app={{ grafana_label }}
  register: gf_instance

- name: Manage missing Grafana instance
  when: gf_instance.resources | length == 0
  ansible.builtin.fail:
    msg: "Missing Grafana instance. Please execute 'ansible-playbook install.yaml -t grafana'."

- name: Get Grafana datasource
  kubernetes.core.k8s_info:
    api_version: grafana.integreatly.org/v1beta1
    namespace: "{{ dsc.grafana.namespace }}"
    kind: GrafanaDatasource
    name: datasource-prom-{{ grafana_label }}
  register: gf_datasource

- name: Manage missing Grafana datasource
  when: gf_instance.resources | length == 0
  ansible.builtin.fail:
    msg: "Missing Grafana datasource. Please execute 'ansible-playbook install.yaml -t grafana-datasource'."

- name: Get datasource UID
  ansible.builtin.set_fact:
    gf_datasource_uid: "{{ gf_datasource.resources[0].metadata.uid }}"

- name: Create Grafana dashboards
  kubernetes.core.k8s:
    template: "{{ item.dashboard_template }}"
  loop: "{{ grafana_dashboards }}"
